{
	"AWSTemplateFormatVersion": "2010-09-09",
	"Description": "HR-TEST-VPC-1",
	"Parameters": {
		"vpcCidr": {
			"Description": "VPC CIDR block.",
			"Type": "String",
			"Default": "10.0.0.0/26",
			"AllowedPattern": "(\\d{1,9})\\.(\\d{1,9})\\.(\\d{1,9})\\.(\\d{1,9})/(\\d{1,9})",
			"ConstraintDescription": "This is test"
		},
		"publicSubnetCidr": {
			"Description": "Public subnet CIDR block.",
			"Type": "String",
			"Default": "10.0.0.0/27",
			"AllowedPattern": "(\\d{1,9})\\.(\\d{1,9})\\.(\\d{1,9})\\.(\\d{1,9})/(\\d{1,9})",
			"ConstraintDescription": "This is test"
		},
		"privateSubnetCidr": {
			"Description": "Private subnet CIDR block.",
			"Type": "String",
			"Default": "10.0.0.32/27",
			"AllowedPattern": "(\\d{1,9})\\.(\\d{1,9})\\.(\\d{1,9})\\.(\\d{1,9})/(\\d{1,9})",
			"ConstraintDescription": "This is test"
		},
		"SSHLocation": {
			"Description": " The IP address range that can be used to SSH to the EC2 instances",
			"Type": "String",
			"MinLength": "9",
			"MaxLength": "18",
			"Default": "0.0.0.0/0",
			"AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
			"ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
		},
		"keyName": {
			"Description": "Name of an existing EC2 KeyPair to enable SSH access to the instance",
			"Type": "String",
			"MinLength": "1",
			"MaxLength": "255",
			"AllowedPattern": "[\\x20-\\x7E]*",
			"ConstraintDescription": "can contain only ASCII characters."
		},
		"instanceType": {
			"Description": "WebServer EC2 instance type >= t2.medium",
			"Type": "String",
			"Default": "t2.medium",
			"AllowedValues": ["t1.micro", "t2.micro", "t2.small", "t2.medium", "m1.small", "m1.medium", "m1.large", "m1.xlarge", "m2.xlarge",
				"m2.2xlarge", "m2.4xlarge", "m3.medium", "m3.large", "m3.xlarge", "m3.2xlarge", "c1.medium", "c1.xlarge", "c3.large", "c3.xlarge", "c3.2xlarge",
				"c3.4xlarge", "c3.8xlarge", "g2.2xlarge", "r3.large", "r3.xlarge", "r3.2xlarge", "r3.4xlarge", "r3.8xlarge", "i2.xlarge", "i2.2xlarge", "i2.4xlarge",
				"i2.8xlarge", "hi1.4xlarge", "hs1.8xlarge", "cr1.8xlarge", "cc2.8xlarge", "cg1.4xlarge"
			],
			"ConstraintDescription": "must be a valid EC2 instance type."
		},
		"dbinstanceType": {
			"Description": "databaseServer EC2 instance type",
			"Type": "String",
			"Default": "t2.medium",
			"AllowedValues": ["t1.micro", "t2.micro", "t2.small", "t2.medium", "m1.small", "m1.medium", "m1.large", "m1.xlarge", "m2.xlarge",
				"m2.2xlarge", "m2.4xlarge", "m3.medium", "m3.large", "m3.xlarge", "m3.2xlarge", "c1.medium", "c1.xlarge", "c3.large", "c3.xlarge", "c3.2xlarge",
				"c3.4xlarge", "c3.8xlarge", "g2.2xlarge", "r3.large", "r3.xlarge", "r3.2xlarge", "r3.4xlarge", "r3.8xlarge", "i2.xlarge", "i2.2xlarge", "i2.4xlarge",
				"i2.8xlarge", "hi1.4xlarge", "hs1.8xlarge", "cr1.8xlarge", "cc2.8xlarge", "cg1.4xlarge"
			],
			"ConstraintDescription": "must be a valid EC2 instance type."
		},
		"DBUser": {
			"Type": "String",
			"Description": "Database admin username"
		},
		"DBPassword": {
			"Type": "String",
			"NoEcho": "true",
			"Description": "Database admin password",
			"MinLength": "8"
		},
		"DBInstanceClass": {
			"Description": "The database instance type",
			"Type": "String",
			"Default": "db.t2.small",
			"AllowedValues": [
				"db.t1.micro",
				"db.m1.small",
				"db.m1.medium",
				"db.m1.large",
				"db.m1.xlarge",
				"db.m2.xlarge",
				"db.m2.2xlarge",
				"db.m2.4xlarge",
				"db.m3.medium",
				"db.m3.large",
				"db.m3.xlarge",
				"db.m3.2xlarge",
				"db.m4.large",
				"db.m4.xlarge",
				"db.m4.2xlarge",
				"db.m4.4xlarge",
				"db.m4.10xlarge",
				"db.r3.large",
				"db.r3.xlarge",
				"db.r3.2xlarge",
				"db.r3.4xlarge",
				"db.r3.8xlarge",
				"db.m2.xlarge",
				"db.m2.2xlarge",
				"db.m2.4xlarge",
				"db.cr1.8xlarge",
				"db.t2.micro",
				"db.t2.small",
				"db.t2.medium",
				"db.t2.large"
			]
		},
		"DBName": {
			"Type": "String",
			"Description": "Database name"
		}
	},
	"Mappings": {
		"RegionMap": {
			"us-east-1": {
				"instance": "ami-8e675ff4",
				"memcached": "ami-43a15f3e",
				"mongo": "ami-43a15f3e",
				"redis": "ami-43a15f3e",
				"elastic": "ami-43a15f3e"
			},
			"us-west-1": {
				"instance": "ami-8e675ff4",
				"memcached": "ami-43a15f3e",
				"mongo": "ami-43a15f3e",
				"redis": "ami-43a15f3e",
				"elastic": "ami-43a15f3e"
			}
		}
	},
	"Resources": {
		"instanceSecurityGroup": {
			"Type": "AWS::EC2::SecurityGroup",
			"Properties": {
				"VpcId":"vpc-e91c5992",
				"GroupDescription": "Enable SSH access via port 22",
				"SecurityGroupIngress": [{
						"IpProtocol": "tcp",
						"FromPort": "22",
						"ToPort": "22",
						"CidrIp": {
							"Ref": "SSHLocation"
						}
					},
					{
						"IpProtocol": "tcp",
						"FromPort": "80",
						"ToPort": "80",
						"CidrIp": "0.0.0.0/0"
					}
				]
			}
		},
		"EC2S3Role": {
			"Type": "AWS::IAM::Role",
			"Properties": {
				"AssumeRolePolicyDocument": {
					"Version": "2012-10-17",
					"Statement": [{
						"Effect": "Allow",
						"Principal": {
							"Service": ["ec2.amazonaws.com"]
						},
						"Action": ["sts:AssumeRole"]
					}]
				},
				"Path": "/",
				"Policies": [{
					"PolicyName": "root",
					"PolicyDocument": {
						"Version": "2012-10-17",
						"Statement": [{
								"Action": "ec2:*",
								"Effect": "Allow",
								"Resource": "*"
							},
							{
								"Effect": "Allow",
								"Action": "elasticloadbalancing:*",
								"Resource": "*"
							},
							{
								"Effect": "Allow",
								"Action": "cloudwatch:*",
								"Resource": "*"
							},
							{
								"Effect": "Allow",
								"Action": "autoscaling:*",
								"Resource": "*"
							},
							{
								"Effect": "Allow",
								"Action": "iam:CreateServiceLinkedRole",
								"Resource": "*",
								"Condition": {
									"StringEquals": {
										"iam:AWSServiceName": [
											"autoscaling.amazonaws.com",
											"ec2scheduled.amazonaws.com",
											"elasticloadbalancing.amazonaws.com",
											"spot.amazonaws.com",
											"spotfleet.amazonaws.com"
										]
									}
								}
							},
							{
								"Effect": "Allow",
								"Action": "s3:*",
								"Resource": "*"
							}
						]
					}
				}]
			}
		},
		"EC2S3InstanceProfile": {
			"Type": "AWS::IAM::InstanceProfile",
			"Properties": {
				"Path": "/",
				"Roles": [{
					"Ref": "EC2S3Role"
				}]
			}
		},
		"databaseSubnetGroup": {
			"Type": "AWS::RDS::DBSubnetGroup",
			"Properties": {
				"DBSubnetGroupDescription": "This subnet group for DB",
				"SubnetIds":  [{
                    "Ref": "privateSubnet"
                },
                {
                    "Ref": "publicSubnet"
                }
            ]
			}
		},
		"databaseSecurityGroup": {
			"Type": "AWS::EC2::SecurityGroup",
			"Properties": {
				"GroupDescription": "Enable MySQL access from web servers. Only used in *test* environment",
				"VpcId": {
					"Ref": "vpc"
				},
				"SecurityGroupIngress": [{
					"IpProtocol": "tcp",
					"FromPort": "3306",
					"ToPort": "3306",
					"SourceSecurityGroupId": {
						"Ref": "instanceSecurityGroup"
					}
				}],
				"Tags": [{
					"Key": "Name",
					"Value": "sgdb"
				}]
			}
		},
		"RDSInstance": {
			"Type": "AWS::RDS::DBInstance",
			"Properties": {
				"AllocatedStorage": "100",
				"DBSubnetGroupName": {
					"Ref": "databaseSubnetGroup"
				},
				"DBInstanceClass": {
					"Ref": "DBInstanceClass"
				},
				"Engine": "MySQL",
				"EngineVersion": "5.7.21",
				"MasterUsername": {
					"Ref": "DBUser"
				},
				"MasterUserPassword": {
					"Ref": "DBPassword"
				},
				"DBName": {
					"Ref": "DBName"
				},
				"VPCSecurityGroups": [{
					"Ref": "databaseSecurityGroup"
				}]
			}
		},
		"deploymentInstance": {
			"Type": "AWS::EC2::Instance",
			"Metadata": {
				"Comment": "Copy the Backup Script and Work on the content."
			},
			"Properties": {
				"ImageId": {
					"Fn::FindInMap": ["RegionMap", {
						"Ref": "AWS::Region"
					}, "instance"]
				},
				"SecurityGroupIds": [{
					"Ref": "instanceSecurityGroup"
				}],
				"SubnetId":"subnet-8d9981a2",
				"InstanceType": {
					"Ref": "instanceType"
				},
				"KeyName": {
					"Ref": "keyName"
				},
				"IamInstanceProfile": {
					"Ref": "EC2S3InstanceProfile"
				},
				"Tags": [{
						"Key": "Environment",
						"Value": "production"
					},
					{
						"Key": "Name",
						"Value": "nodetest"
					},
					{
						"Key": "Role",
						"Value": "webserver"
					}
				],
				"UserData": {
					"Fn::Base64": {
						"Fn::Join": ["", [
                            "#!/bin/bash\n",   
							"apt-get update\n",                                                     
                            "apt-get install -y mysql-client\n",
                            "pwd\n",
                            "aws s3 cp s3://hacker-rank-devops-dev/allhkdbdump.sql . --region=us-east-1\n",
                             "mysql -h ", { 
								"Fn::GetAtt": ["RDSInstance", "Endpoint.Address"]
							}, " -u", {
								"Ref": "DBUser"
							}, " -p", {
								"Ref": "DBPassword"
							}, " ",{
								"Ref": "DBName"
							}, " < allhkdbdump.sql\n"
						]]
					}
				}
			}
		}
	}
}