events {
	worker_connections 1024;
	accept_mutex off;
	use epoll;
}

http {
	upstream rails {
		server 127.0 .0 .1: 3000;
	}
	upstream node {
		server 127.0 .0 .1: 3002;
	}

	server {
		listen 8090;
		server_name localhost;
		proxy_set_header Host $host;

		access_log /
			var / log / nginx.access.log combined
		location / {
			proxy_pass http: //rails;
		}


		location~ * "(^\/jobs\/dashboard\/?$)" {
			proxy_pass http: //rails;
		}

		location~ * "(^/uikit/?.*$)" {
			proxy_pass http: //node;
		}

		location~ * "(^/jobs/search/?(\?.*$|$))" {
			proxy_pass http: //node;
		}

		location~ * "(^/domains/?(\?.*$|$))" {
			proxy_pass http: //node;
		}

		location~ * "(^/work/tests?(\?.*$|$))" {
			proxy_pass http: //node;
		}

		location~ * "(^/work/library?(\?.*$|$))" {
			proxy_pass http: //node;
		}

		location~ * "(^/work/library/hackerrank?(\?.*$|$))" {
			proxy_pass http: //node;
		}

		location~ * "(^/work/library/hackerrank/coding?(\?.*$|$))" {
			proxy_pass http: //node;
		}

		location~ * "(^/work/library/archived?(\?.*$|$))" {
			proxy_pass http: //node;
		}

		location~ * "(^/work/library/archived/coding?(\?.*$|$))" {
			proxy_pass http: //node;
		}

		location~ * "(^/work/library/hackerrank/fullstack?(\?.*$|$))" {
			proxy_pass http: //node;
		}

		location~ * "(^\/work\/tests\/(create|archived|shared|owned|starred|live|all)?(\/\d*)?(\/questions)?$)" {
			proxy_pass http: //node;
		}

		location~ * "(^\/work\/tests/(\d*)/candidates/invite/?(\\?.*|$))" {
			proxy_pass http: //node;
		}

		location~ * "(^\/work\/tests\/(\d*(\/questions|\/insights|\/settings\/(general|candidates|access|score|questions|emails))))$" {
			proxy_pass http: //node;
		}

		location~ * "(^\/work\/tests\/(\d*)(\?.*|$))" {
			proxy_pass http: //node;
		}

		location~ * "(^\/work\/tests\/(\d*)\/library(\?.*|$))" {
			proxy_pass http: //node;
		}

		location~ * "(^\/work\/tests\/*)" {
			proxy_pass http: //node;
		}

		location~ * "(^\/work\/tests\/(\d*)\/library/hackerrank(\?.*|$))" {
			proxy_pass http: //node;
		}

		location~ * "(^\/work\/tests\/(\d*)\/library/personal(\?.*|$))" {
			proxy_pass http: //node;
		}

		location~ * "(^\/work\/tests\/(\d*)\/library/hackerrank/coding(\?.*|$))" {
			proxy_pass http: //node;
		}

		location~ * "(^\/work\/tests\/(\d*)\/library/personal/coding(\?.*|$))" {
			proxy_pass http: //node;
		}

		location~ * "(^\/work\/tests\/(\d*)?\/library(\?.*|$))" {
			proxy_pass http: //node;
		}

		location~ * "(^/domains/.*$)" {
			proxy_pass http: //node;
		}

		location~ * "(^\/work/library/personal(\?.*|$))" {
			proxy_pass http: //node;
		}

		location~ * "(^\/work/library/personal/coding(\?.*|$))" {
			proxy_pass http: //node;
		}

		location~ * "(^\/contests\/?((archived|college)(\/\d*)?)?\/?(\?.*|$))" {
			proxy_pass http: //node;
		}

		location~ * "(^/dashboard/?(\?.*|$))" {
			proxy_pass http: //node;
		}

		location~ * "(^\/rank\/?(domains|contests)?\/?(\?.*|$))" {
			proxy_pass http: //node;
		}

		location~ * "(^/leaderboard((/|\?).*|$))" {
			proxy_pass http: //node;
		}

		location~ * "(^/terms-of-service/?(\?.*|$))" {
			proxy_pass http: //node;
		}

		location~ * "(^/environment\/?.*)" {
			proxy_pass http: //node;
		}

		location~ * "(^\/calendar\/?(\?.*|$))" {
			proxy_pass http: //node;
		}

		location~ * "(^\/feed\/?(\?.*|$))" {
			proxy_pass http: //node;
		}

		location~ * "(^/faq-hacker-level/?(\?.*|$))" {
			proxy_pass http: //node;
		}

		location~ * "(^/privacy/?(\?.*|$))" {
			proxy_pass http: //node;
		}

		location~ * "(^\/jobs\/search\/?$)" {
			proxy_pass http: //node;
		}

		location~ * "(^\/companies\/.*?\/jobs\/[0-9]*?\/apply\/?(\?.*|$))" {
			proxy_pass http: //node;
		}

		location~ * "^\/challenges\/((?!bookmarks)[^\/]+?)(?!\/(topics|copy-from|forum))((\/?\?.*|$)|\/.*)" {
			proxy_pass http: //node;
		}

		location~ * "^\/snippets((\/.*)|(\?.*)|$)" {
			proxy_pass http: //node;
		}

		location~ * "(^(?!(/public|/node|/proxy-api)).*$)" {
			if ($arg_hr_r) {
				proxy_pass http: //node;
					break;
			}
			proxy_pass http: //rails;
		}

		location / public {
			proxy_pass http: //node;
		}
		location / assets {
			proxy_pass http: //rails;
		}

		location / node {
			proxy_pass http: //node;
		}

		location / proxy - api {
			proxy_pass http: //node;
		}

	}
}